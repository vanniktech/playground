apply plugin: 'org.jetbrains.kotlin.multiplatform'
apply plugin: 'org.jetbrains.kotlin.native.cocoapods'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.android.library'
apply plugin: 'kotlin-parcelize'

kotlin {
  sourceSets {
    all {
      languageSettings {
        optIn("kotlin.RequiresOptIn")
      }
    }
  }

  sourceSets.commonMain.dependencies {
    api libs.kotlinx.datetime
    api libs.uuid
    api libs.multiplatform.settings
  }

  sourceSets.commonTest.dependencies {
    implementation libs.kotlin.reflect
    implementation libs.kotlin.test.annotations.common
    implementation libs.kotlin.test.common
    implementation libs.multiplatform.settings.test
  }

  android("android")

  sourceSets.androidMain.dependencies {
  }

  sourceSets.androidTest.dependencies {
    implementation libs.kotlin.test.junit
  }

  jvm("jvm")

  sourceSets.jvmMain.dependencies {
  }

  sourceSets.jvmTest.dependencies {
    implementation libs.kotlin.test.junit
  }

  ios {
    binaries.all {
      freeCompilerArgs += "-Xg0" // Required for CrashKiOS.
      if (it instanceof org.jetbrains.kotlin.gradle.plugin.mpp.Framework) {
        it.isStatic = true // Required for CrashKiOS.
        it.embedBitcode("YES".equals(System.getenv("ENABLE_BITCODE")) ? "bitcode" : "marker")
        it.setFreeCompilerArgs(it.getFreeCompilerArgs() + "-Xobjc-generics")
      }
    }
  }

  sourceSets.iosMain.dependencies {
    api libs.crashkios
  }

  cocoapods {
    summary = "Shared"
    homepage = "https://www.vanniktech.de/"
    version = "1.0.0"
  }
}

android {
  namespace "com.vanniktech.playground.kmp"
  compileSdkVersion libs.versions.compileSdk.get() as int

  defaultConfig {
    minSdkVersion libs.versions.minSdk.get() as int
  }

  buildFeatures {
    viewBinding = true
    buildConfig = false
  }

  compileOptions {
    coreLibraryDesugaringEnabled true
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
  }

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_11.toString()
  }

  packagingOptions {
    exclude("META-INF/*.kotlin_module")
  }
}

dependencies {
  coreLibraryDesugaring libs.desugar.jdk.libs
}
